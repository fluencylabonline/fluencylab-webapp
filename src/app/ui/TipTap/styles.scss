.tiptap {
    input[type="checkbox"] {
      margin-right: 8px;
    }

    mark {
      background-color: #e4de6e;
      border-radius: 0.4rem;
      box-decoration-break: clone;
      padding: 0.1rem 0.3rem;
    }

    a {
      color: #1e75c5;
      font-weight: bold;
    }
    
      ul,
      ol,
      li {
        padding: 0 1rem;
      }
    
      h1,
      h2
      {
        line-height: 1.1;
      }

      h3,
      h4,
      h5,
      h6
      {
        line-height: 1.5;
      }
    
      h1{
        font-size: 2.2rem;
        font-weight: 900;
      }
      h2{
        font-size: 1.5rem;
        font-weight: 600;
      }
      h3{
        font-size: 1.125rem;
      }
      h4{
        font-size: 1.375rem;
      }
      h5{
        font-size: 2rem;
      }
      h6{
        font-size: 3rem;
      }
  
      code {
        background-color: rgba(#616161, 0.1);
        color: #616161;
        margin-top: 5px;
        margin-bottom: 5px;
      }
    
      pre {
        background: #DEBE16;
        text-align: center;
        color: #FFF;
        font-weight: 700;
        font-family: 'Inter', sans-serif;
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        margin-top: 8px;
        margin-bottom: 8px;
        
        code {
          color: inherit;
          padding: 0;
          background: none;
          font-size: 1rem;
        }
      }
    
      img {
        max-width: 100%;
        height: auto;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 16px;
        &.ProseMirror-selectednode {
          outline: 3px solid #68CEF8;
        }
      }
    
      blockquote {
        padding-left: 1rem;
        border-left: 2px solid rgba(#0D0D0D, 0.1);
      }
    
      hr {
        border: none;
        border-top: 3px solid rgba(#7e7575, 0.3);
        margin: 2rem 0;
      }
  
      .bold{
        background-color: aqua;
      }
    }
  
    .Popover {
      background: #e6dfdf67;
      border-radius: 8px;
      padding: 10px;
      padding-right: 16px;
      padding-left: 16px;
      margin: -5px;
      display: flex;
      flex-direction: row;
      gap: 12px;
    }

    /* Give a remote user a caret */
  .collaboration-cursor__caret {
    border-left: 1px solid #0d0d0d;
    border-right: 1px solid #0d0d0d;
    margin-left: -1px;
    margin-right: -1px;
    pointer-events: none;
    position: relative;
    word-break: normal;
  }

  /* Render the username above the caret */
  .collaboration-cursor__label {
    border-radius: 3px 3px 3px 0;
    color: #0d0d0d;
    font-size: 12px;
    font-style: normal;
    font-weight: 600;
    left: -1px;
    line-height: normal;
    padding: 0.1rem 0.3rem;
    position: absolute;
    top: -1.4em;
    user-select: none;
    white-space: nowrap;
  }
  

  
/* NotebookEditor.css */
.save-button {
  padding: 5px 5px;
  border-radius: 100%;
  color: white;
  border: none;
  transition: background-color 0.5s ease;
}

.save-button.animate {
  animation: saveAnimation 1s ease;
}

@keyframes saveAnimation {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}

ul[data-type="taskList"] {
  list-style: none;
  margin-left: 0;
  padding: 0;

  li {
    align-items: flex-start;
    display: flex;

    > label {
      flex: 0 0 auto;
      margin-right: 0.5rem;
      user-select: none;
    }

    > div {
      flex: 1 1 auto;
    }
  }

  input[type="checkbox"] {
    cursor: pointer;
  }

  ul[data-type="taskList"] {
    margin: 0;
  }
}

/* Example CSS */
/* MultipleChoiceComponent.module.css */

/* Container for the Multiple Choice Component */
.reactComponent {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
  padding: 3px;
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 8px;
  margin-bottom: 20px;
}

/* Styling the question */
.reactComponent h3 {
  font-size: 15px;
  font-weight: bold;
  margin-bottom: 5px;
  color: #333;
}

/* List of options */
.optionsList {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

/* Each option style */
.option {
  padding: 10px;
  margin: 5px 0;
  background-color: #fff;
  border: 1px solid #e6e6e6;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

/* Hover effect for options */
.option:hover {
  background-color: #f0f0f0;
  transform: scale(1.02);
  font-weight: bold;
  transition: 0.3s ease, transform 0.2s ease;
}

/* Styles for correct answer */
.correct {
  background-color: #4caf50; /* Green */
  color: white;
  font-weight: bold;
}

/* Styles for incorrect answer */
.incorrect {
  background-color: #f44336; /* Red */
  color: white;
  font-weight: bold;
}

/* Feedback message after selection */
.feedback {
  margin-top: 10px;
  font-size: 14px;
  font-weight: bold;
}

.textGreen500 {
  color: #4caf50;
}

.textRed500 {
  color: #f44336;
}

.option.disabled {
  background-color: #f0f0f0; /* Light gray color */
  color: #888; /* Disable text */
  pointer-events: none; /* Prevent any clicks on disabled options */
  opacity: 0.8; /* Dim the option */
}

/* Styles for correct answer */
.correct.disabled {
  background-color: #5eb961; /* Green */
  color: white;
  font-weight: 500;
}

/* Styles for incorrect answer */
.incorrect.disabled {
  background-color: #f88f87; /* Red */
  color: white;
  font-weight: 500;
}